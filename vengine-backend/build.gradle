plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'io.vengine'
version = 'vengine-V1'
sourceCompatibility = '11'

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'it.ozimov:embedded-redis:0.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-logging'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
//    implementation("io.springfox:springfox-swagger2:3.0.0")
//    implementation("io.springfox:springfox-spring-web:3.0.0")
//    implementation("io.springfox:springfox-swagger-ui:3.0.0")
//    implementation("io.springfox:springfox-bean-validators:3.0.0")
//    implementation "io.springfox:springfox-boot-starter:3.0.0"

    compile("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: 'swagger-annotations'
        exclude module: 'swagger-models'
    }
    compile("io.swagger:swagger-annotations:1.5.21")
    compile("io.swagger:swagger-models:1.5.21")

    compile group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'

    compile("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16")
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.google.code.gson:gson'  // Json을 객체로 맵핑하기 위해 Gson 라이브러리 사용.
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

    // 데이터 로깅
    compile group: 'org.hibernate', name: 'hibernate-envers', version: '5.4.21.Final'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'

    implementation 'com.querydsl:querydsl-jpa'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    //엑셀
    compile group: 'org.apache.poi', name: 'poi', version: '3.11'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile 'com.github.drapostolos:type-parser:0.7.0'
}
dependencyManagement { imports { mavenBom 'org.springframework.cloud:spring-cloud-aws:2.2.1.RELEASE' } }

// querydsl 추가 시작
// querydsl 자동 생성 파일이 업데이트 되면 git 자체도 업데이터 해야하기에 build 에 포함시켜 업데이트가 필요없게 만들자.
//def queryDslDir = "src/main/generated"
def queryDslDir = "$buildDir/generated/querydsl"

querydsl {
    library = "com.querydsl:querydsl-apt:4.2.2" // 사용할 AnnotationProcesoor 정의
    jpa = true
    querydslSourcesDir = queryDslDir
}
sourceSets {
    main {
        java {
            srcDir queryDslDir
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    // 아래를 지정하지 않으면, compile 로 걸린 JPA 의존성에 접근하지 못한다.
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝

test {
    useJUnitPlatform()
}
